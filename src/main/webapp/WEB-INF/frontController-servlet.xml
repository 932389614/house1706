<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 在哪个包以及子包下搜索被@Controller注解标记的控制器 -->
	<context:component-scan base-package="com.mlz.house1706.controller"></context:component-scan>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/toPub" />
			
			<bean class="com.mlz.house1706.intercepter.LoginIntercepter" />
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 通过注解配置Spring MVC -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- 配置消息转换器 -->
			<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"></bean>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter"></bean>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 配置使用应用服务器(Tomcat)默认的Servlet处理静态资源 -->
	<mvc:default-servlet-handler />


	<!-- 配置JSP的视图解析器对象 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 上传文件的视图解析器 -->
<!-- 	servlet3 StandardServletMultipartResolver
	apache	Commons FileUpload-CommonsMultipartResolver -->
	<!-- 如果使用servlet3原生文件上传，需在配置DispatcherServlet 时指定 multipart-config -->
	<!-- 如果使用Apache的Commons-FileUpload文件上传，需在依赖项中加入commons-fileupload的jar文件 -->
	<bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	
	</bean>
	
</beans>